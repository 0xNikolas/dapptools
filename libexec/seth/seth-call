#!/usr/bin/env bash
set -e
### seth-call -- call a contract without updating the blockchain
### Usage: seth call [-F <origin>] [-b <block>] <object> <sig> [<args>]
###    or: seth call [-F <origin>] [-b <block>] <object> [<data>]
###
### Perform a local call to <object> without publishing a transaction.
###
[[ $1 ]] || { seth call --help >&2; exit 1; }
jshon+=(-n {})
object=$(seth --to-address "$1")
jshon+=(-s "$object" -i to)

### If <sig> has the form `<name>(<types>)', infer <data> from <sig>/<args>.
### If no <sig> or <data> is given, read it from standard input instead.
###
data=$(seth calldata ${2+"${@:2}"})
jshon+=(-s "$data" -i data)

### If `-o <origin>' is given, simulate calling <object> from <origin>
### If `-v <value>' is given, simulate transferring <value> to <object>.
jshon+=($(seth --send-params))
jshon+=(-i append)

### If `-b <block>' is given, use the state of the blockchain as of <block>.
###
jshon+=(-s "${SETH_BLOCK-latest}" -i append)

### Print the return value to standard output (decoded, if <sig> is given).
###
result=$(seth --jsonrpc eth_call "${jshon[@]}")
seth --abi-decode "$2" "$result"

### See also seth-send(1), seth-estimate(1), seth-storage(1), seth-code(1).
